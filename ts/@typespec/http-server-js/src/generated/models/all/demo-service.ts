// Generated by Microsoft TypeSpec

export interface WidgetList {
  items: Widget[];
}

export interface Error {
  code: number;

  message: string;
}

export interface Widget {
  id: string;

  weight: number;

  color: "red" | "blue";
}

export interface AnalyzeResult {
  id: string;

  analysis: string;
}

export interface Widgets<Context = unknown> {
  /**
   * List widgets
   */
  list(ctx: Context): Promise<WidgetList | Error>;

  /**
   * Read widgets
   */
  read(ctx: Context, id: string): Promise<Widget | Error>;

  /**
   * Create a widget
   */
  create(ctx: Context, body: Widget): Promise<Widget | Error>;

  /**
   * Update a widget
   */
  update(ctx: Context, id: string, body: Widget): Promise<Widget | Error>;

  /**
   * Delete a widget
   */
  delete(ctx: Context, id: string): Promise<void | Error>;

  /**
   * Analyze a widget
   */
  analyze(ctx: Context, id: string): Promise<AnalyzeResult | Error>;
}
